#include "uart.h"

#include <stdio.h>
#include <complex.h>

typedef float complex cplx;
char uart_buf[50];
uint16_t uart_buf_len;

print_int(char *string, int var){
	uart_buf_len = sprintf(uart_buf, string, var);
	HAL_UART_Transmit(&huart3, (uint8_t *)uart_buf, uart_buf_len, 100);
}

print_float(char *string, float var){
	uart_buf_len = sprintf(uart_buf, string, var);
	HAL_UART_Transmit(&huart3, (uint8_t *)uart_buf, uart_buf_len, 100);
}

print_clpx(char *string, cplx var){
	uart_buf_len = sprintf(uart_buf, "%s%.5f + %.5fj", string, creal(var), cimag(var));
	HAL_UART_Transmit(&huart3, (uint8_t *)uart_buf, uart_buf_len, 100);
}

print_arrayInt(int arr){
	int size = sizeof(arr)/sizeof(arr[0]);
	for(int i = 0; i < size; i++){
		print_int("%u, ", arr[i]);
	}
	printUART_int("\r\n", 0);
}

print_arrayFloat(float arr){
	int size = sizeof(arr)/sizeof(arr[0]);
	for(int i = 0; i < size; i++){
		print_float("%.5f, ", arr[i]);
	}
	printUART_int("\r\n", 0);
}

print_arrayCplx(cplx arr){
	int size = sizeof(arr)/sizeof(arr[0]);
	for(int i = 0; i < size; i++){
		print_cplx("", arr[i]);
	}
	printUART_int("\r\n", 0);
}
